SCENE 6:

Now, we can add together the unit 1 nose tip and the unit 1 ear length to form a data sample with a unit 1 nose tip and a unit 1 ear length.
    ear length on y-axis, nose tip on x-axis
    D:\Documents\_prog\prog_cust\manim\video 1 
        \ 3.2.py

Notice that this is the same as adding the vectors pointing to data points (1,0), and (0,1) to form a vector pointing to (1,1). 
    Quickly move copies (or the original, so it doesn't take up too much space) of (1,0) and (0,1) into (1,1)
    Also move copies to top right so they're used as addition.??

    Addition at top right: add them, then after move them to overlap, fade in equals sign aligned w/ expression.
    Then put in data pts, move to (1,1), and eqns using vectors move out from img eqns to above.

    fade out prev eqns

    don't move the data pts; move the vectors, tail matching head. when moving vectors, do not move the images on the coordinate pts. only once the vectors are added to say they're equivalent to the (1,1) vector do they come together to form the (1,1) image.

Because this combination of nose tip and ear length describes our cat people input, we call this 2D coordinate space our Input Space.

<<<<<
So now we know how to describe a cat person using both nose tip and ear length. How do we use both of these features to calculate Nap Smile?

First, let's see how to predict Nap Smile using Ear Length. We notice that the longer a cat person's ears are, the more they enjoy naps. But relatively speaking, ear length doesn't have as much impact on nap enjoyment as nose tip does. For example, a cat person with an ear length of 2 would only enjoy naps by 0.5 units more than a cat person with an length of 1.
    1 -> 0.5 nap
    2 -> 1 nap

So we get the equation: (0.5) * ear = nap
Which we can represent using variables.

And since it was also noticed that nose tip and ear length can build on top of each other to predict nap enjoyment, being they are independent, they can be added:
    w1*nose + (w2) * ear = nap

To add these two features to get nap Smile, we use the exact same vector addition that we used in our Input Space.

What does that mean?

Recall that the Data Measurement at point 1 in nose is sent to point 2 in Nap. Similarly, the Data Measurent at point 1 in ear is sent to point 3 in Nap.
    show nose to nap animation again, and move the dm

    show ear copy rotating from vertical to horizontal, then place it below nap, 

    "Similarly,"- also moving its dm to nap

Now when we add together the vectors in our 2D coordinate plane,
    move 2D tail to head, ready to add

we also add together their analogous vectors found in our 1D Nap Space.
    move vector from ear to nap right so it's tail to head

    eqn at top: transform  w1*nose = nap to  w1*nose + (w2) * ear = nap

When we add them together, we get the same data point, which is our cat person Tom. 
    transf to Tom

Our Nap Space says Tom has a nap enjoyment level of 2 + 0.5 = 2.5.
    transf Tom to zleeping cat with smile

<<<<<<<<<<
In our Input Space, it's easy to see how we can add together nose tips and ear lengths of different units. Let's take a nose tip of 0.5 units, and a ear length of 2 units, and add them together. To model this using vectors, we multiply -1 by [1, 0], and 2 by [0, 1], and then add them together to get [-1, 2]. 
    Scale nose tip down, then ear length up, by moving data pt to become new pt, and move those two into (0.5, 2) such that they overlap. Same eqns. For vectors, start with 0.5 * [1,0], then move scalar inside and at same time, move 0.5 into img (layer behind) to shrink it.

Now let's do the same for these vector's analogous versions in Nap Space. To add a negative vector, we just go left, instead of right.
    show anim

Notice that we're just adding together scaled versions of [1,0] and [0,1]. We call these vectors that are mapped to basic measuring units of 1 'basis vectors', because they're basic buildings blocks we can scale and add together to get any other vector in our input space. They're like an alphabet used to form words in a language.
    re-play the basis vector animations w/ labels
    write out words 'basis vectors' on screen

The basic measuring units labeled by the basis vectors in our Input Space are mapped to the vectors of length 2 and 3 in Nap Space. But these are no longer the basis vectors in Nap Space. The basis vector in Nap Space is a Nap Smile of Unit 1.
    map them

    Nap space's true basis vector appears

So even though these two spaces are both calculating Tom, they are expressing Tom using different basis vectors, where the Input Space talks about Tom in terms of Nose units and Ear units, while the Nap Space talks about Tom in terms of Nap units. 

He simultaneously exists in both sets of dimensions at once, but he looks different in each one because we're just looking at him from different perspectives, like seeing his shadow.

